#!/usr/bin/env ruby

require 'commander/import'

applebot = File.join(File.dirname(__FILE__), '..', 'lib', 'applebot')
require applebot

HighLine.track_eof = false # Fix for built-in Ruby
Signal.trap("INT") {} # Suppress backtrace when exiting command

program :name, 'AppleBot'
program :version, AppleBot::VERSION
program :description, AppleBot::DESCRIPTION

program :help, 'Author', 'Clay Allsopp <clay@usepropeller.com>'
program :help, 'Website', AppleBot::WEBSITE
program :help_formatter, :compact

default_command :help

global_option('--manifest FILE.json', 'Use a JSON file to load options for each command') { |file|
  $manifest_file = file
}

global_option('--username USERNAME', 'Username to login to Apple Service, or $APPLEBOT_USERNAME') { |username|
  $username = username
}

global_option('--password PASSWORD', 'Password to login to Apple Service, or $APPLEBOT_PASSWORD') { |password|
  $password = password
}

global_option('--format FORMAT', "Output format - 'json' or 'pretty'") { |format|
  $format = format
}

global_option('--verbose', "Verbose output") {|verbose|
  $verbose = verbose
}

AppleBot.commands.each do |apple_command|
  command apple_command.cli_command.to_sym do |c|
    c.syntax = "applebot #{apple_command.cli_command} [options]"
    c.description = apple_command.description
    c.summary = apple_command.description

    (apple_command.options.required + apple_command.options.optional).each do |apple_option|
      c.option "--#{apple_option.key} VALUE", apple_option.cli_description
    end

    c.action do |args, options|
      user_options = {
        manifest: $manifest_file,
        format: $format || 'pretty',
        verbose: $verbose,
        print_result: true
      }.merge(options.__hash__)

      credentials = {username: $username, password: $password}

      ret_value = false
      AppleBot.with_credentials(credentials) do |ab|
        ret_value = ab.run_command(apple_command.ruby_method, user_options)
      end
      $username = nil
      $password = nil
      $manifest_file = nil
      $format = nil
      $verbose = nil
      ret_value
    end
  end
end